#!/bin/bash

function install_python3() {
    local python3_dir=${ROOT_DIR}/python3
    msg_info "Installing python $PYTHON3_VERSION..."
    mkdir -p ${BUILD_DIR}
    pushd ${BUILD_DIR}

    wget http://python.org/ftp/python/$PYTHON3_VERSION/Python-$PYTHON3_VERSION.tar.xz

    tar xf Python-$PYTHON3_VERSION.tar.xz
    cd Python-$PYTHON3_VERSION
    ./configure --prefix=$python3_dir
    make install -j$NUMBER_OF_PROCESSORS

    check_status $? "Installing python $PYTHON3_VERSION..."

    if [ ! -e $python3_dir/bin/python ]; then
        ln -s $python3_dir/bin/python3 $python3_dir/bin/python
    fi

    popd
}

# python is already provided by OpenShift
# so we don't need to compile and install it
function check_python3() {
    local python3_bin=${ROOT_DIR}/python3/bin/python

    if [[ ! -e  ${python3_bin} ]]; then
        echo "python not installed."
        install_python3
    else
        local python3_version=`${python3_bin} --version 2>&1|cut -d ' ' -f2`

        if [[ "${PYTHON3_VERSION}" != ${python3_version} ]]; then
            echo "python old, version: ${python3_version}."
            install_python
        else
            echo "python up to date, version: ${python3_version}."
        fi
    fi
}

function check_pip3() {
# pip3 comes with python3
    msg_info "pip3 ..."
}


# virtualenv is already provided by OpenShift
# so we don't need to compile and install it
function check_venv3() {
    local python3_bin=${ROOT_DIR}/python3/bin/python
    local virtualenv_dir="$ROOT_DIR/venv3"
    
    msg_info "Checking for virtualenv..."
    if [ -d $virtualenv_dir ]; then
        msg_success "Checking for virtualenv... exists."
        return
    fi

    msg_info "Creating virtualenv..."
    ${ROOT_DIR}/python3/bin/pyvenv $virtualenv_dir
    check_status $? 'Creating virtualenv...'
}

function install_requirements3() {
    msg_info "Procesing requirements..."
    REQUIREMENTS_FILE="$OPENSHIFT_REPO_DIR/requirements3.txt"
    if [ ! -f $REQUIREMENTS_FILE ]; then
        msg_info "Procesing requirements... not found"
        return
    fi
    activate_virtualenv
    pip3 install -r $REQUIREMENTS_FILE
    check_status $? "Procesing requirements..."
}


